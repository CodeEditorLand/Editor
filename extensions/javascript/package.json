{
	"name": "javascript",
	"displayName": "%displayName%",
	"version": "0.0.1",
	"private": false,
	"description": "%description%",
	"homepage": "https://github.com/CodeEditorLand/Foundation#readme",
	"bugs": {
		"url": "https://github.com/CodeEditorLand/Foundation/issues"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/CodeEditorLand/Foundation.git"
	},
	"license": "SEE LICENSE IN LICENSE",
	"author": {
		"name": "Playform",
		"email": "hello@playform.cloud",
		"url": "https://playform.cloud"
	},
	"type": "module",
	"scripts": {
		"Document": "Document 'Source/**/*.ts'",
		"prepublishOnly": "Build 'Source/**/*.ts'"
	},
	"contributes": {
		"configurationDefaults": {
			"[javascript]": {
				"editor.maxTokenizationLineLength": 2500
			}
		},
		"grammars": [
			{
				"embeddedLanguages": {
					"meta.embedded.expression.js": "javascriptreact",
					"meta.tag.attributes.js.jsx": "javascriptreact",
					"meta.tag.js": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags"
				},
				"language": "javascriptreact",
				"path": "./syntaxes/JavaScriptReact.tmLanguage.json",
				"scopeName": "source.js.jsx",
				"tokenTypes": {
					"entity.name.function.tagged-template": "other",
					"entity.name.type.instance.jsdoc": "other",
					"meta.import string.quoted": "other",
					"meta.template.expression": "other",
					"meta.template.expression comment": "comment",
					"meta.template.expression string": "string",
					"variable.other.jsdoc": "other"
				}
			},
			{
				"embeddedLanguages": {
					"meta.embedded.expression.js": "javascript",
					"meta.tag.attributes.js": "javascript",
					"meta.tag.js": "jsx-tags",
					"meta.tag.without-attributes.js": "jsx-tags"
				},
				"language": "javascript",
				"path": "./syntaxes/JavaScript.tmLanguage.json",
				"scopeName": "source.js",
				"tokenTypes": {
					"entity.name.function.tagged-template": "other",
					"entity.name.type.instance.jsdoc": "other",
					"meta.import string.quoted": "other",
					"meta.template.expression": "other",
					"meta.template.expression comment": "comment",
					"meta.template.expression string": "string",
					"variable.other.jsdoc": "other"
				}
			},
			{
				"path": "./syntaxes/Regular Expressions (JavaScript).tmLanguage",
				"scopeName": "source.js.regexp"
			}
		],
		"languages": [
			{
				"aliases": [
					"JavaScript JSX",
					"JavaScript React",
					"jsx"
				],
				"configuration": "./javascript-language-configuration.json",
				"extensions": [
					".jsx"
				],
				"id": "javascriptreact"
			},
			{
				"aliases": [
					"JavaScript",
					"javascript",
					"js"
				],
				"configuration": "./javascript-language-configuration.json",
				"extensions": [
					".js",
					".es6",
					".mjs",
					".cjs",
					".pac"
				],
				"filenames": [
					"jakefile"
				],
				"firstLine": "^#!.*\\bnode",
				"id": "javascript",
				"mimetypes": [
					"text/javascript"
				]
			},
			{
				"aliases": [],
				"configuration": "./tags-language-configuration.json",
				"id": "jsx-tags"
			}
		],
		"semanticTokenScopes": [
			{
				"language": "javascript",
				"scopes": {
					"function": [
						"entity.name.function.js"
					],
					"function.defaultLibrary": [
						"support.function.js"
					],
					"namespace": [
						"entity.name.type.module.js"
					],
					"property": [
						"variable.other.property.js"
					],
					"property.readonly": [
						"variable.other.constant.property.js"
					],
					"variable": [
						"variable.other.readwrite.js"
					],
					"variable.defaultLibrary": [
						"support.variable.js"
					],
					"variable.readonly": [
						"variable.other.constant.object.js"
					]
				}
			},
			{
				"language": "javascriptreact",
				"scopes": {
					"function": [
						"entity.name.function.jsx"
					],
					"function.defaultLibrary": [
						"support.function.js"
					],
					"namespace": [
						"entity.name.type.module.jsx"
					],
					"property": [
						"variable.other.property.jsx"
					],
					"property.readonly": [
						"variable.other.constant.property.jsx"
					],
					"variable": [
						"variable.other.readwrite.jsx"
					],
					"variable.defaultLibrary": [
						"support.variable.js"
					],
					"variable.readonly": [
						"variable.other.constant.object.jsx"
					]
				}
			}
		],
		"snippets": [
			{
				"language": "javascript",
				"path": "./snippets/javascript.code-snippets"
			},
			{
				"language": "javascriptreact",
				"path": "./snippets/javascript.code-snippets"
			}
		]
	},
	"devDependencies": {
		"@playform/build": "0.0.5",
		"@playform/document": "0.0.6"
	},
	"publishConfig": {
		"access": "public"
	}
}
